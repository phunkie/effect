parameters:
    level: 5
    paths:
        - src
    excludePaths:
        - src/Functions/common.php
    ignoreErrors:
        # Allow mixed types for now in Ops traits (will be fixed as we add type classes)
        - '#Method .+Ops::.+ has parameter \$.+ with no value type specified in iterable type array#'
        - '#Method .+Ops::.+ return type has no value type specified in iterable type array#'
        - '#Function .+ has parameter \$.+ with no value type specified in iterable type array#'
        - '#Function .+ return type with generic class .+ does not specify its types#'
        # Allow new static() in traits - will be refactored in Phase 1
        - '#Unsafe usage of new static\(\)#'
        # Allow undefined property access in traits that access parent class properties
        - '#Access to an undefined property .+::\$unsafeRun#'
        # Generic type issues - will be fixed with proper type classes
        - '#PHPDoc tag @return contains generic type .+ but (class|interface) .+ is not generic#'
        - '#PHPDoc tag @param .+ contains generic type .+ but (class|interface) .+ is not generic#'
        - '#PHPDoc tag @return with type .+ is not subtype of native type#'
        - '#PHPDoc tag @param .+ with type .+ is not subtype of native type#'
        - '#Method .+ has invalid return type .+\\Ops\\B#'
        - '#PHPDoc tag @template .+ is not referenced in a parameter#'
        - '#has parameter \$.+ with no type specified#'
        - '#Method .+ should return .+ but returns#'
        - '#Call to an undefined method .+::apply\(\)#'
        - '#Template type B of method .+::flatMap\(\) is not referenced in a parameter#'
    reportUnmatchedIgnoredErrors: false
